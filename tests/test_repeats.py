
from unittest import TestCase
from pyweaving import find_repeats, find_mirrors

# Samples
rsample01 = [[1,2,3, 2,3,2,3,2, 3,2,1],
            {2: [[[3, 2], [2, 4, 6, 8]]],
             3: [[[2, 3, 2], [1, 3, 5, 7]]],
             4: [[[3, 2, 3, 2], [2, 4, 6]]],
             5: [[[2, 3, 2, 3, 2], [1, 3, 5]]]}
           ]

rsample02 = [[[1,1],[2,1],[3,1],[2,1],[3,1],[2,1],[3,1],[2,1],[3,1],[2,1],[1,1]],
            {3: [[[[2, 1], [3, 1], [2, 1]], [1, 3, 5, 7]]],
             5: [[[[2, 1], [3, 1], [2, 1], [3, 1], [2, 1]], [1, 3, 5]]],
             2: [[[[3, 1], [2, 1]], [2, 4, 6, 8]]],
             4: [[[[3, 1], [2, 1], [3, 1], [2, 1]], [2, 4, 6]]]}
           ]

rsample03 = [[1,2,3,4,5,3,4,5,6,7,8,6,7,8,2,3,4,6,7,8,9],
            {3: [[[2, 3, 4], [1, 14]], [[3, 4, 5], [2, 5]], [[6, 7, 8], [8, 11, 17]]],
             2: [[[3, 4], [2, 5, 15]]]}
           ]

rsample04 = [[[1,1],[2,1],[3,1],[1,1],[2,1],[3,1],[1,1],[2,1],[3,1],[1,1],[2,1],[3,1]],
            {3: [[[[1, 1], [2, 1], [3, 1]], [0, 3, 6, 9]]],
             6: [[[[1, 1], [2, 1], [3, 1], [1, 1], [2, 1], [3, 1]], [0, 3, 6]], [[[2, 1], [3, 1], [1, 1], [2, 1], [3, 1], [1, 1]], [1, 4]]],
             2: [[[[2, 1], [3, 1]], [1, 4, 7, 10]]],
             5: [[[[2, 1], [3, 1], [1, 1], [2, 1], [3, 1]], [1, 4, 7]]],
             4: [[[[3, 1], [1, 1], [2, 1], [3, 1]], [2, 5, 8]]]}
            ]


# Add new samples/results here
Repeat_samples = [rsample01, rsample02, rsample03, rsample04]

#
msample01 = [[1,3,4,5,6,7,5,4,6,5,4,3],  # long seq internal
			 [[1, 4, [3, 4, 5, 6], [8]],
			  [2, 2, [4, 5], [6, 9]]
			 ]]

msample02 = [[1,3,4,5,6,7,4,6,5,4,3], # long seq internal gap
			 [[1, 4, [3, 4, 5, 6], [7]]
			 ]]

msample03 = [[1,3,4,5,6,4,3,5,4,3,6,3,1,5,4,3],  # 1,3 and 3,4 mirrors
			 [[0, 2, [1, 3], [11]],
			  [1, 2, [3, 4], [5, 8, 14]],
			  [1, 3, [3, 4, 5], [7, 13]]
			 ]]

msample04 = [[1,2,3,2,1,2,3,4,5,6,5,4,3,2,1,6],  # bigger seq after smaller seq
			 [[0, 2, [1, 2], [3, 13]],
			  [0, 3, [1, 2, 3], [12]],
			  [2, 2, [3, 2], [5]],
			  [4, 5, [1, 2, 3, 4, 5], [10]]
			 ]]

msample05 = [[1,2,3,4,5,6,5,4,3,2,1,6,1,3,2,1],  # smaller seq after bigger
			 [[0, 5, [1, 2, 3, 4, 5], [6]],
			  [0, 3, [1, 2, 3], [13]]
			 ]]

msample06 = [[1,2,3,4,5,6,4,5,6,4,5,6,5,4,1,2,1,4,5,6,4,5,6,4,5,6,5,4,3,2,1],
			 [[0, 2, [1, 2], [15, 29]],
			  [0, 6, [1, 2, 3, 4, 5, 6], [25]],
			  [3, 3, [4, 5, 6], [11, 25]],
			  [9, 5, [4, 5, 6, 5, 4], [23]],
			  [11, 4, [6, 5, 4, 1], [16]],
			  [11, 3, [6, 5, 4], [20, 23]]
			 ]]

#seq = [1,3,4,5,6,7,5,4,6,5,4,3,6,5,4,3,2] # long seq internal 2
#seq = [1,3,4,5,6,7,6,5,4,3] # long seq skipstart
#seq = [1,3,4,5,6,7,6,5,4,3,1] # long seq full
#seq = [3,4,5,6,7,6,5,4,3,1] # long seq skipend
#seq = [1,3,4,5,6,6,5,4,3] # long seq perfect mirror
#seq = [1,3,6,5,4,5,1,5,4,3,3,1] # end mirror


Mirror_Samples = [msample01, msample02, msample03, msample04, msample05, msample06]


class TestRepeats(TestCase):

    def test_samples(self):
        for sample, result in Repeat_samples:
            repeats = find_repeats(sample)
            repeats == result

class TestMirrors(TestCase):
	
	def __init__(self):
		for sample, result in Mirror_Samples:
			mirrors = find_mirrors(sample)
			mirrors == result